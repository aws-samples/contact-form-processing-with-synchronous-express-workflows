AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Serverless Form Handler - it accepts a form submission from a webpage,
  saving the data to a DynamoDB, this also creates a Step functions State machine
  which and a Lambda function that sends an email via SES. You will need to add/edit
  the API integration to trigger the Step function

  '
Parameters:
  ValidatedEmail:
    Type: String
    Description: (Required) A validated SES email address for receiving new submissions.
    MaxLength: 70
    Default: validated@email.com
    MinLength: 4
    ConstraintDescription: Required. Must be a SES verified email address.
Globals:
  Function:
    Timeout: 10
Resources:
  FormDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: formId
        AttributeType: S
      KeySchema:
      - AttributeName: formId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  NotifyAdminWithSES:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: NotifyAdminWithSES
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Environment:
        Variables:
          ValidatedEmail:
            Ref: ValidatedEmail
          FormDataTable:
            Ref: FormDataTable
      Policies:
      - SESCrudPolicy:
          IdentityName:
            Ref: ValidatedEmail
  GenerateRefernceNumber:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GenerateRefernceNumber
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 128
  DetectSentiment:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DetectSentiment
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Policies:
      - ComprehendBasicAccessPolicy: {}
  ProcessFormStateMachineExpressSync:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ../../statemachine/sfn-template.asl.json
      DefinitionSubstitutions:
        NotifyAdminWithSES:
          Ref: NotifyAdminWithSES
        GenerateRefernceNumber:
          Ref: GenerateRefernceNumber
        DetectSentiment:
          Ref: DetectSentiment
        DDBTable:
          Ref: FormDataTable
      Policies:
      - LambdaInvokePolicy:
          FunctionName:
            Ref: NotifyAdminWithSES
      - LambdaInvokePolicy:
          FunctionName:
            Ref: DetectSentiment
      - LambdaInvokePolicy:
          FunctionName:
            Ref: GenerateRefernceNumber
      - DynamoDBWritePolicy:
          TableName:
            Ref: FormDataTable
      Type: EXPRESS
  HttpApiforSyncWF:
    Type: AWS::Serverless::HttpApi
    Properties:
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ../../api.yaml
  HttpApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: AllowSFNExec
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: states:StartSyncExecution
            Resource:
              Fn::GetAtt:
              - ProcessFormStateMachineExpressSync
              - Arn
Outputs:
  HttpApiEndpoint:
    Description: URL of your API endpoint
    Value:
      Fn::Sub: https://${HttpApiforSyncWF}.execute-api.${AWS::Region}.${AWS::URLSuffix}/
  WorkflowArn:
    Description: The ARN of your Synchronous Express workflow
    Value:
      Fn::GetAtt:
      - ProcessFormStateMachineExpressSync
      - Arn
